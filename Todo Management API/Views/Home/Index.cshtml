<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ToDo List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="p-5">

    <div class="container">
        <h2 class="mb-4">ToDo Management</h2>

        <!-- Alert Message -->
        <div id="message" class="alert d-none"></div>

        <!-- Add ToDo Form -->
        <form id="addForm" class="mb-4">
            <div class="row g-2">
                <div class="col-md-3">
                    <input type="text" id="title" class="form-control" placeholder="Title" required>
                </div>
                <div class="col-md-2">
                    <select id="status" class="form-select">
                        <option value="Pending">Pending</option>
                        <option value="InProgress">InProgress</option>
                        <option value="Completed">Completed</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <select id="priority" class="form-select">
                        <option value="Low">Low</option>
                        <option value="Medium">Medium</option>
                        <option value="High">High</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <input type="date" id="dueDate" class="form-control">
                </div>
                <div class="col-md-3">
                    <button class="btn btn-primary w-100" type="submit">Add ToDo</button>
                </div>
            </div>
        </form>

        <!-- ToDo Table -->
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Due Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="todoTable"></tbody>
        </table>
    </div>

    <script>
        const API_BASE = "http://localhost:5000/api/todo"; // عدلي حسب عنوان الـ API
        const tableBody = document.getElementById('todoTable');
        const messageDiv = document.getElementById('message');

        // Load todos on page load
        document.addEventListener('DOMContentLoaded', fetchTodos);

        // Add form submission
        document.getElementById('addForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const dto = {
                title: document.getElementById('title').value,
                status: document.getElementById('status').value,
                priority: document.getElementById('priority').value,
                dueDate: document.getElementById('dueDate').value || null
            };
            const res = await fetch(API_BASE, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(dto)
            });
            const result = await res.json();
            showMessage(result.success ? "Added successfully!" : "Failed to add.", result.success);
            if (result.success) {
                fetchTodos();
                e.target.reset();
            }
        });

        async function fetchTodos() {
            const res = await fetch(API_BASE);
            const result = await res.json();
            tableBody.innerHTML = '';
            if (result.success) {
                result.data.forEach(item => {
                    const row = `<tr>
                        <td>${item.title}</td>
                        <td>${item.status}</td>
                        <td>${item.priority}</td>
                        <td>${item.dueDate ? item.dueDate.split('T')[0] : ''}</td>
                        <td>
                            <button class="btn btn-danger btn-sm" onclick="deleteTodo('${item.id}')">Delete</button>
                        </td>
                    </tr>`;
                    tableBody.innerHTML += row;
                });
            } else {
                showMessage("Failed to load data.", false);
            }
        }

        async function deleteTodo(id) {
            const res = await fetch(`${API_BASE}/${id}`, {
                method: 'DELETE'
            });
            const result = await res.json();
            showMessage(result.success ? "Deleted successfully." : "Failed to delete.", result.success);
            if (result.success) fetchTodos();
        }

        function showMessage(message, isSuccess) {
            messageDiv.className = `alert ${isSuccess ? 'alert-success' : 'alert-danger'}`;
            messageDiv.textContent = message;
            messageDiv.classList.remove('d-none');
            setTimeout(() => messageDiv.classList.add('d-none'), 3000);
        }
    </script>
</body>
</html>
